{"ast":null,"code":"var _jsxFileName = \"/Users/mitchrobards/React Project/weather-app/src/weathercomponent.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// import { useNavigate} from \"react-router-dom\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherComponent = props => {\n  _s();\n  const {\n    city,\n    temperature,\n    conditions,\n    weathericon,\n    lon,\n    lat,\n    forecastDataList,\n    onDelete\n  } = props;\n  console.log(\"test\" + forecastDataList);\n  // const navigate = useNavigate();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const iconBaseUrl = \"https://openweathermap.org/img/wn/\";\n  const handleDelete = () => {\n    onDelete();\n  };\n  const libraries = ['places'];\n  const mapContainerStyle = {\n    width: '450px',\n    height: '200px'\n  };\n  const center = {\n    lat: parseFloat(lat),\n    lng: parseFloat(lon)\n  };\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyBp0RJ5wEOLY9e4ffdUihnFX6ItI1KdIcc',\n    libraries\n  });\n  const getDate = index => {\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const currentDate = new Date();\n    const dayIndex = currentDate.getDay() + index;\n    const currentDayOfWeek = daysOfWeek[dayIndex + index];\n    return currentDayOfWeek;\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherDiv\",\n    onClick: () => setIsExpanded(!isExpanded),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `city ${isExpanded ? 'expandedCity' : ''}`,\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `temperature ${isExpanded ? 'expandedTemp' : ''}`,\n      children: temperature + '\\u00B0'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `test ${isExpanded ? 'expandedTest' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `conditions ${isExpanded ? 'expandedConditions' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: conditions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weatherIcon\",\n          src: `${iconBaseUrl}${weathericon}@2x.png`,\n          alt: \"Weather Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast\",\n          children: forecastDataList.list && forecastDataList.list.slice(0, 7).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecastDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Temp: \", Math.round(item.main.temp)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: getDate(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expandedDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete\",\n      onClick: onDelete,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherComponent, \"yUZ5ZtDZyQAKhD7PykM19mv8gZs=\", false, function () {\n  return [useLoadScript];\n});\n_c = WeatherComponent;\nexport default WeatherComponent;\nvar _c;\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"names":["React","motion","AnimatePresence","GoogleMap","useLoadScript","Marker","useState","jsxDEV","_jsxDEV","WeatherComponent","props","_s","city","temperature","conditions","weathericon","lon","lat","forecastDataList","onDelete","console","log","isExpanded","setIsExpanded","iconBaseUrl","handleDelete","libraries","mapContainerStyle","width","height","center","parseFloat","lng","isLoaded","loadError","googleMapsApiKey","getDate","index","daysOfWeek","currentDate","Date","dayIndex","getDay","currentDayOfWeek","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","list","slice","map","item","Math","round","main","temp","_c","$RefreshReg$"],"sources":["/Users/mitchrobards/React Project/weather-app/src/weathercomponent.js"],"sourcesContent":["import React from \"react\";\n// import { useNavigate} from \"react-router-dom\";\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport { useState } from \"react\";\nimport './App.css'\n\n\nconst WeatherComponent = (props) => {\n    const { city, temperature, conditions, weathericon, lon, lat, forecastDataList, onDelete } = props;\n\n    console.log(\"test\" + forecastDataList);\n    // const navigate = useNavigate();\n    const [isExpanded, setIsExpanded] = useState(false);\n    const iconBaseUrl = \"https://openweathermap.org/img/wn/\";\n\n    const handleDelete = () => {\n        onDelete();\n    }\n    const libraries = ['places'];\n    const mapContainerStyle = {\n        width: '450px',\n        height: '200px',\n    };\n\n    const center = {\n        lat: parseFloat(lat),\n        lng: parseFloat(lon),\n    };\n\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: 'AIzaSyBp0RJ5wEOLY9e4ffdUihnFX6ItI1KdIcc',\n        libraries,\n    });\n\n    const getDate = (index) => {\n        const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const currentDate = new Date();\n        const dayIndex = currentDate.getDay() + index;\n        const currentDayOfWeek = daysOfWeek[dayIndex + index];\n        return currentDayOfWeek;\n    }\n\n    if (loadError) {\n        return <div>Error loading maps</div>;\n    }\n\n    if (!isLoaded) {\n        return <div>Loading maps</div>;\n    }\n\n    return (\n\n        <div className=\"weatherDiv\" onClick={() => setIsExpanded(!isExpanded)}>\n            <p className={`city ${isExpanded ? 'expandedCity' : ''}`}>{city}</p>\n            <p className={`temperature ${isExpanded ? 'expandedTemp' : ''}`}>{temperature + '\\u00B0'}</p>\n            <div className={`test ${isExpanded ? 'expandedTest' : ''}`}>\n                <p className={`conditions ${isExpanded ? 'expandedConditions' : ''}`}>\n                    <span>{conditions}</span>\n                    <img className=\"weatherIcon\" src={`${iconBaseUrl}${weathericon}@2x.png`} alt=\"Weather Icon\" />\n                </p>\n\n                <div className=\"gridWrapper\">\n                    <div className=\"forecast\">\n                        {forecastDataList.list && forecastDataList.list.slice(0, 7).map((item, index) => (\n                            <div key={index} className=\"forecastDiv\">\n                                <p>Temp: {Math.round(item.main.temp)}</p>\n                                <p>{getDate(index)}</p>\n                            </div>\n                        ))}\n                    </div>\n\n\n\n\n                </div>\n            </div>\n\n\n\n            {isExpanded && (\n                <div className=\"expandedDiv\">\n                    <div className=\"map-container\">\n                        {/* <GoogleMap\n                            className=\"map\"\n                            mapContainerStyle={mapContainerStyle}\n                            zoom={9}\n                            center={center}\n                            options={{\n                                disableDefaultUI: true,\n                                zoomControl: false,\n                            }}\n                        /> */}\n                    </div>\n                </div>\n\n\n            )}\n\n            <button className=\"delete\" onClick={onDelete}>-</button>\n        </div>\n    );\n};\n\n\nexport default WeatherComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}