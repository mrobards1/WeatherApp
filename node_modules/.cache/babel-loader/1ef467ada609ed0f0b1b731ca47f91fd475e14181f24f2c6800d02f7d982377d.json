{"ast":null,"code":"var _jsxFileName = \"/Users/mitchrobards/React Project/weather-app/src/map.js\",\n  _s = $RefreshSig$();\n// Weather.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('');\n  const apiKey = 'fca1d839270b44785afc07f9cb794775'; // Replace with your actual API key\n\n  const getWeather = async () => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter city\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getWeather,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp, \" K\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"/goIKPOObmQkJXAWw6ioLFnqsAE=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","city","setCity","apiKey","getWeather","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","name","main","temp","_c","$RefreshReg$"],"sources":["/Users/mitchrobards/React Project/weather-app/src/map.js"],"sourcesContent":["// Weather.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Weather = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('');\n\n  const apiKey = 'fca1d839270b44785afc07f9cb794775'; // Replace with your actual API key\n\n  const getWeather = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`\n      );\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Weather App</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter city\"\n        value={city}\n        onChange={(e) => setCity(e.target.value)}\n      />\n      <button onClick={getWeather}>Get Weather</button>\n\n      {weatherData && (\n        <div>\n          <h2>{weatherData.name}</h2>\n          <p>Temperature: {weatherData.main.temp} K</p>\n          {/* Add more information as needed */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,MAAM,GAAG,kCAAkC,CAAC,CAAC;;EAEnD,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC7B,qDAAoDL,IAAK,UAASE,MAAO,EAC5E,CAAC;MACDH,cAAc,CAACK,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEhB,IAAK;MACZiB,QAAQ,EAAGC,CAAC,IAAKjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAEjB,UAAW;MAAAM,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEhDf,WAAW,iBACVH,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAKX,WAAW,CAACuB;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3BlB,OAAA;QAAAc,QAAA,GAAG,eAAa,EAACX,WAAW,CAACwB,IAAI,CAACC,IAAI,EAAC,IAAE;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CArCID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}