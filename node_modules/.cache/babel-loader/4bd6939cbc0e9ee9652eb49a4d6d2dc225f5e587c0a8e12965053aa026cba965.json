{"ast":null,"code":"var _jsxFileName = \"/Users/mitchrobards/React Project/weather-app/src/weather.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport H from '@here/maps-api-for-javascript';\nimport WeatherComponent from './weathercomponent';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s2();\n  var _s = $RefreshSig$();\n  const api = {\n    key: 'fca1d839270b44785afc07f9cb794775',\n    base: 'https://api.openweathermap.org/data/2.5'\n  };\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"\");\n  const [componentInstances, setComponentInstances] = useState([]);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n  const Map = () => {\n    _s();\n    const mapRef = useRef(null);\n    const map = useRef(null);\n    const platform = useRef(null);\n    const apikey = 'ZPlPMbgkG4oEozUrqPrvPXYrNTW90JgZ-vRfS44FQqE';\n  };\n  _s(Map, \"hQZLumq/oe7/91PU8kq4PrHqMBE=\");\n  useEffect(() => {\n    // Check if the map object has already been created\n    if (!Map.current) {\n      // Create a platform object with the API key\n      platform.current = new H.service.Platform({\n        apikey\n      });\n      // Create a new Raster Tile service instance\n      const rasterTileService = platform.current.getRasterTileService({\n        queryParams: {\n          style: \"explore.day\",\n          size: 512\n        }\n      });\n      // Creates a new instance of the H.service.rasterTile.Provider class\n      // The class provides raster tiles for a given tile layer ID and pixel format\n      const rasterTileProvider = new H.service.rasterTile.Provider(rasterTileService);\n      // Create a new Tile layer with the Raster Tile provider\n      const rasterTileLayer = new H.map.layer.TileLayer(rasterTileProvider);\n      // Create a new map instance with the Tile layer, center and zoom level\n      const newMap = new H.Map(mapRef.current, rasterTileLayer, {\n        pixelRatio: window.devicePixelRatio,\n        center: {\n          lat: 64.144,\n          lng: -21.94\n        },\n        zoom: 14\n      });\n\n      // Add panning and zooming behavior to the map\n      const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(newMap));\n\n      // Set the map object to the reference\n      Map.current = newMap;\n    }\n  },\n  // Dependencies array\n  [apikey]);\n\n  // Return a div element to hold the map\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    },\n    ref: mapRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n  const getWeather = event => {\n    if (event.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api.key}&units=imperial`).then(response => response.json()).then(data => {\n        setWeatherData(data);\n        setCity(\"\");\n\n        // Create a new Weather component and add it to the instances\n        const newWeatherComponent = /*#__PURE__*/_jsxDEV(WeatherComponent, {\n          city: data.name,\n          temperature: Math.round(data.main.temp),\n          conditions: data.weather[0].description,\n          weathericon: data.weather[0].icon,\n          onDelete: () => handleDelete(componentInstances.length)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this);\n        setComponentInstances([...componentInstances, newWeatherComponent]);\n      });\n    }\n  };\n  const handleDelete = index => {\n    const updatedInstances = [...componentInstances];\n    updatedInstances.splice(index, 1);\n    setComponentInstances(updatedInstances);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Enter Location\",\n        onChange: e => setCity(e.target.value),\n        value: city,\n        onKeyDown: getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), typeof weatherData.main === 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to WeatherApp. Enter a city to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), componentInstances.map((component, index) => ( /*#__PURE__*/React.cloneElement(component, {\n        onDelete: () => handleDelete(index)\n      })))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s2(Weather, \"aMXaWaGkKODc9sojVJ+V4Gm+Oxo=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","useRef","H","WeatherComponent","jsxDEV","_jsxDEV","Weather","_s2","_s","$RefreshSig$","api","key","base","weatherData","setWeatherData","city","setCity","componentInstances","setComponentInstances","weatherIcon","setWeatherIcon","Map","mapRef","map","platform","apikey","current","service","Platform","rasterTileService","getRasterTileService","queryParams","style","size","rasterTileProvider","rasterTile","Provider","rasterTileLayer","layer","TileLayer","newMap","pixelRatio","window","devicePixelRatio","center","lat","lng","zoom","behavior","mapevents","Behavior","MapEvents","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","getWeather","event","fetch","then","response","json","data","newWeatherComponent","name","temperature","Math","round","main","temp","conditions","weather","description","weathericon","icon","onDelete","handleDelete","length","index","updatedInstances","splice","className","children","placeholder","onChange","e","target","value","onKeyDown","component","cloneElement","_c","$RefreshReg$"],"sources":["/Users/mitchrobards/React Project/weather-app/src/weather.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport H from '@here/maps-api-for-javascript';\n\nimport WeatherComponent from './weathercomponent';\nimport './App.css';\n\nfunction Weather() {\n  const api = {\n    key: 'fca1d839270b44785afc07f9cb794775',\n    base: 'https://api.openweathermap.org/data/2.5',\n  };\n\n\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"\");\n  const [componentInstances, setComponentInstances] = useState([]);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n\n  const Map = () => {\n    const mapRef = useRef(null);\n    const map = useRef(null);\n    const platform = useRef(null)\n    const apikey = 'ZPlPMbgkG4oEozUrqPrvPXYrNTW90JgZ-vRfS44FQqE'\n  }\n\n  useEffect(\n    () => {\n      // Check if the map object has already been created\n      if (!Map.current) {\n        // Create a platform object with the API key\n        platform.current = new H.service.Platform({ apikey });\n        // Create a new Raster Tile service instance\n        const rasterTileService = platform.current.getRasterTileService({\n          queryParams: {\n            style: \"explore.day\",\n            size: 512,\n          },\n        });\n        // Creates a new instance of the H.service.rasterTile.Provider class\n        // The class provides raster tiles for a given tile layer ID and pixel format\n        const rasterTileProvider = new H.service.rasterTile.Provider(\n          rasterTileService\n        );\n        // Create a new Tile layer with the Raster Tile provider\n        const rasterTileLayer = new H.map.layer.TileLayer(rasterTileProvider);\n        // Create a new map instance with the Tile layer, center and zoom level\n        const newMap = new H.Map(mapRef.current, rasterTileLayer, {\n          pixelRatio: window.devicePixelRatio,\n          center: {\n            lat: 64.144,\n            lng: -21.94,\n          },\n          zoom: 14,\n        });\n  \n        // Add panning and zooming behavior to the map\n        const behavior = new H.mapevents.Behavior(\n          new H.mapevents.MapEvents(newMap)\n        );\n  \n        // Set the map object to the reference\n        Map.current = newMap;\n      }\n    },\n    // Dependencies array\n    [apikey]\n  );\n  \n  // Return a div element to hold the map\n  return <div style={ { width: \"100%\", height: \"500px\" } } ref={mapRef} />;\n  \n\n  const getWeather = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api.key}&units=imperial`)\n        .then(response => response.json())\n        .then(data => {\n          setWeatherData(data);\n          setCity(\"\");\n\n          \n\n          // Create a new Weather component and add it to the instances\n          const newWeatherComponent = (\n\n            <WeatherComponent\n              city={data.name}\n              temperature={Math.round(data.main.temp)}\n              conditions={data.weather[0].description}\n              weathericon={data.weather[0].icon}\n              onDelete={() => (handleDelete(componentInstances.length))}\n            />\n\n\n          );\n          setComponentInstances([...componentInstances, newWeatherComponent]);\n        });\n    }\n  };\n\n  const handleDelete = (index) => {\n    const updatedInstances = [...componentInstances];\n    updatedInstances.splice(index, 1);\n    setComponentInstances(updatedInstances);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <input\n          className=\"input\"\n          placeholder=\"Enter Location\"\n          onChange={(e) => setCity(e.target.value)}\n          value={city}\n          onKeyDown={getWeather}\n        />\n\n        {typeof weatherData.main === 'undefined' && (\n          <div>\n            <p>Welcome to WeatherApp. Enter a city to get started</p>\n          </div>\n        )}\n\n        {componentInstances.map((component, index) => (\n          React.cloneElement(component, { onDelete: () => handleDelete(index) })\n        ))}\n      </div>\n    </div>\n\n  );\n}\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,CAAC,MAAM,+BAA+B;AAE7C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACjB,MAAMC,GAAG,GAAG;IACVC,GAAG,EAAE,kCAAkC;IACvCC,IAAI,EAAE;EACR,CAAC;EAGD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMsB,GAAG,GAAGA,CAAA,KAAM;IAAAb,EAAA;IAChB,MAAMc,MAAM,GAAGrB,MAAM,CAAC,IAAI,CAAC;IAC3B,MAAMsB,GAAG,GAAGtB,MAAM,CAAC,IAAI,CAAC;IACxB,MAAMuB,QAAQ,GAAGvB,MAAM,CAAC,IAAI,CAAC;IAC7B,MAAMwB,MAAM,GAAG,6CAA6C;EAC9D,CAAC;EAAAjB,EAAA,CALKa,GAAG;EAOTrB,SAAS,CACP,MAAM;IACJ;IACA,IAAI,CAACqB,GAAG,CAACK,OAAO,EAAE;MAChB;MACAF,QAAQ,CAACE,OAAO,GAAG,IAAIxB,CAAC,CAACyB,OAAO,CAACC,QAAQ,CAAC;QAAEH;MAAO,CAAC,CAAC;MACrD;MACA,MAAMI,iBAAiB,GAAGL,QAAQ,CAACE,OAAO,CAACI,oBAAoB,CAAC;QAC9DC,WAAW,EAAE;UACXC,KAAK,EAAE,aAAa;UACpBC,IAAI,EAAE;QACR;MACF,CAAC,CAAC;MACF;MACA;MACA,MAAMC,kBAAkB,GAAG,IAAIhC,CAAC,CAACyB,OAAO,CAACQ,UAAU,CAACC,QAAQ,CAC1DP,iBACF,CAAC;MACD;MACA,MAAMQ,eAAe,GAAG,IAAInC,CAAC,CAACqB,GAAG,CAACe,KAAK,CAACC,SAAS,CAACL,kBAAkB,CAAC;MACrE;MACA,MAAMM,MAAM,GAAG,IAAItC,CAAC,CAACmB,GAAG,CAACC,MAAM,CAACI,OAAO,EAAEW,eAAe,EAAE;QACxDI,UAAU,EAAEC,MAAM,CAACC,gBAAgB;QACnCC,MAAM,EAAE;UACNC,GAAG,EAAE,MAAM;UACXC,GAAG,EAAE,CAAC;QACR,CAAC;QACDC,IAAI,EAAE;MACR,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAG,IAAI9C,CAAC,CAAC+C,SAAS,CAACC,QAAQ,CACvC,IAAIhD,CAAC,CAAC+C,SAAS,CAACE,SAAS,CAACX,MAAM,CAClC,CAAC;;MAED;MACAnB,GAAG,CAACK,OAAO,GAAGc,MAAM;IACtB;EACF,CAAC;EACD;EACA,CAACf,MAAM,CACT,CAAC;;EAED;EACA,oBAAOpB,OAAA;IAAK2B,KAAK,EAAG;MAAEoB,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAG;IAACC,GAAG,EAAEhC;EAAO;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAGxE,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5B,IAAIA,KAAK,CAACjD,GAAG,KAAK,OAAO,EAAE;MACzBkD,KAAK,CAAE,qDAAoD9C,IAAK,UAASL,GAAG,CAACC,GAAI,iBAAgB,CAAC,CAC/FmD,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZnD,cAAc,CAACmD,IAAI,CAAC;QACpBjD,OAAO,CAAC,EAAE,CAAC;;QAIX;QACA,MAAMkD,mBAAmB,gBAEvB7D,OAAA,CAACF,gBAAgB;UACfY,IAAI,EAAEkD,IAAI,CAACE,IAAK;UAChBC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACL,IAAI,CAACM,IAAI,CAACC,IAAI,CAAE;UACxCC,UAAU,EAAER,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACC,WAAY;UACxCC,WAAW,EAAEX,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACG,IAAK;UAClCC,QAAQ,EAAEA,CAAA,KAAOC,YAAY,CAAC9D,kBAAkB,CAAC+D,MAAM;QAAG;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAGF;QACDxC,qBAAqB,CAAC,CAAC,GAAGD,kBAAkB,EAAEiD,mBAAmB,CAAC,CAAC;MACrE,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMa,YAAY,GAAIE,KAAK,IAAK;IAC9B,MAAMC,gBAAgB,GAAG,CAAC,GAAGjE,kBAAkB,CAAC;IAChDiE,gBAAgB,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACjC/D,qBAAqB,CAACgE,gBAAgB,CAAC;EACzC,CAAC;EAED,oBACE7E,OAAA;IAAK+E,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBhF,OAAA;MAAK+E,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBhF,OAAA;QACE+E,SAAS,EAAC,OAAO;QACjBE,WAAW,EAAC,gBAAgB;QAC5BC,QAAQ,EAAGC,CAAC,IAAKxE,OAAO,CAACwE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACzCA,KAAK,EAAE3E,IAAK;QACZ4E,SAAS,EAAEhC;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EAED,OAAO7C,WAAW,CAAC0D,IAAI,KAAK,WAAW,iBACtClE,OAAA;QAAAgF,QAAA,eACEhF,OAAA;UAAAgF,QAAA,EAAG;QAAkD;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CACN,EAEAzC,kBAAkB,CAACM,GAAG,CAAC,CAACqE,SAAS,EAAEX,KAAK,oBACvCnF,KAAK,CAAC+F,YAAY,CAACD,SAAS,EAAE;QAAEd,QAAQ,EAAEA,CAAA,KAAMC,YAAY,CAACE,KAAK;MAAE,CAAC,CAAC,CACvE,CAAC;IAAA;MAAA1B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV;AAACnD,GAAA,CA5HQD,OAAO;AAAAwF,EAAA,GAAPxF,OAAO;AA8HhB,eAAeA,OAAO;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}