{"ast":null,"code":"var _jsxFileName = \"/Users/mitchrobards/React Project/weather-app/src/weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport WeatherComponent from './weathercomponent';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const weatherApi = {\n    api: process.env.REACT_APP_OPEN_WEATHER_KEY,\n    base: 'https://api.openweathermap.org/data/2.5'\n  };\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"\");\n  const [forecastData, setForecastData] = useState({});\n  const [hourlyForecast, setHourlyForecast] = useState({});\n  const [airPollution, setAirPollution] = useState({});\n  const [componentInstances, setComponentInstances] = useState([]);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n  const getWeather = event => {\n    if (event.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${weatherApi.key}&units=imperial`).then(response => response.json()).then(data => {\n        setWeatherData(data);\n        setCity(\"\");\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${weatherApi.key}&units=imperial`).then(response => response.json()).then(forecastData => {\n          setForecastData(forecastData);\n\n          // fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${weatherApi.key}`)\n          //     .then(response => response.json())\n          //     .then(airPollution => {\n          //       setAirPollution(airPollution);\n\n          // Create a new Weather component and add it to the instances\n          const newWeatherComponent = /*#__PURE__*/_jsxDEV(WeatherComponent, {\n            // Make sure to provide a unique key\n            city: data.name,\n            country: data.sys.country,\n            temperature: Math.round(data.main.temp),\n            conditions: data.weather[0].description,\n            wind: data.wind.speed,\n            winddeg: data.wind.deg,\n            pressure: data.main.pressure,\n            humidity: data.main.humidity,\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            weathericon: data.weather[0].icon,\n            onDelete: () => handleDelete(componentInstances.length),\n            lon: data.coord.lon,\n            lat: data.coord.lat,\n            forecastDataList: forecastData\n          }, componentInstances.length, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this);\n          setComponentInstances(prevInstances => [...prevInstances, newWeatherComponent]);\n        });\n      });\n      // });\n    }\n  };\n  const handleDelete = index => {\n    const updatedInstances = [...componentInstances];\n    updatedInstances.splice(index, 1);\n    setComponentInstances(updatedInstances);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Enter Location\",\n        onChange: e => setCity(e.target.value),\n        value: city,\n        onKeyDown: getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), typeof weatherData.main === 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to WeatherApp. Enter a city to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), componentInstances.map((component, index) => ( /*#__PURE__*/React.cloneElement(component, {\n        onDelete: () => handleDelete(index)\n      })))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"ChSHDcNNvkyaienKTxvBJ7L08Zo=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","useRef","WeatherComponent","jsxDEV","_jsxDEV","Weather","_s","weatherApi","api","process","env","REACT_APP_OPEN_WEATHER_KEY","base","weatherData","setWeatherData","city","setCity","forecastData","setForecastData","hourlyForecast","setHourlyForecast","airPollution","setAirPollution","componentInstances","setComponentInstances","weatherIcon","setWeatherIcon","getWeather","event","key","fetch","then","response","json","data","coord","lat","lon","newWeatherComponent","name","country","sys","temperature","Math","round","main","temp","conditions","weather","description","wind","speed","winddeg","deg","pressure","humidity","sunrise","sunset","weathericon","icon","onDelete","handleDelete","length","forecastDataList","fileName","_jsxFileName","lineNumber","columnNumber","prevInstances","index","updatedInstances","splice","className","children","placeholder","onChange","e","target","value","onKeyDown","map","component","cloneElement","_c","$RefreshReg$"],"sources":["/Users/mitchrobards/React Project/weather-app/src/weather.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nimport WeatherComponent from './weathercomponent';\nimport './App.css';\n\nfunction Weather() {\n  const weatherApi = {\n    api: process.env.REACT_APP_OPEN_WEATHER_KEY,\n    base: 'https://api.openweathermap.org/data/2.5',\n  };\n\n\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"\");\n  const [forecastData, setForecastData] = useState({});\n  const [hourlyForecast, setHourlyForecast] = useState({});\n  const [airPollution, setAirPollution] = useState({});\n  const [componentInstances, setComponentInstances] = useState([]);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n\n\n\n\n  const getWeather = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${weatherApi.key}&units=imperial`)\n        .then(response => response.json())\n        .then(data => {\n          setWeatherData(data);\n          setCity(\"\");\n  \n        fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${weatherApi.key}&units=imperial`)\n          .then(response => response.json())\n          .then(forecastData => {\n            setForecastData(forecastData);\n\n        // fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${weatherApi.key}`)\n        //     .then(response => response.json())\n        //     .then(airPollution => {\n        //       setAirPollution(airPollution);\n            \n            \n  \n              // Create a new Weather component and add it to the instances\n              const newWeatherComponent = (\n                <WeatherComponent\n                  key={componentInstances.length} // Make sure to provide a unique key\n                  city={data.name}\n                  country={data.sys.country}\n                  temperature={Math.round(data.main.temp)}\n                  conditions={data.weather[0].description}\n                  wind={data.wind.speed}\n                  winddeg={data.wind.deg}\n                  pressure={data.main.pressure}\n                  humidity={data.main.humidity}\n                  sunrise={data.sys.sunrise}\n                  sunset={data.sys.sunset}\n\n                  weathericon={data.weather[0].icon}\n                  onDelete={() => handleDelete(componentInstances.length)}\n                  lon={data.coord.lon}\n                  lat={data.coord.lat}\n                  forecastDataList={forecastData}\n                />\n              );\n  \n              setComponentInstances(prevInstances => [...prevInstances, newWeatherComponent]);\n            });\n            });\n        // });\n    }\n  };\n  \n\n  const handleDelete = (index) => {\n    const updatedInstances = [...componentInstances];\n    updatedInstances.splice(index, 1);\n    setComponentInstances(updatedInstances);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <input\n          className=\"input\"\n          placeholder=\"Enter Location\"\n          onChange={(e) => setCity(e.target.value)}\n          value={city}\n          onKeyDown={getWeather}\n        />\n\n        {typeof weatherData.main === 'undefined' && (\n          <div>\n            <p>Welcome to WeatherApp. Enter a city to get started</p>\n          </div>\n        )}\n\n        {componentInstances.map((component, index) => (\n          React.cloneElement(component, { onDelete: () => handleDelete(index) })\n        ))}\n      </div>\n    </div>\n\n  );\n}\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}