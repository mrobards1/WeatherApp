{"ast":null,"code":"var _jsxFileName = \"/Users/mitchrobards/React Project/weather-app/src/weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport WeatherComponent from './weathercomponent';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const api = {\n    key: 'fca1d839270b44785afc07f9cb794775',\n    base: 'https://api.openweathermap.org/data/2.5'\n  };\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"\");\n  const [componentInstances, setComponentInstances] = useState([]);\n  const getWeather = event => {\n    if (event.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api.key}&units=imperial`).then(response => response.json()).then(data => {\n        setWeatherData(data);\n        setCity(\"\");\n\n        // Create a new Weather component and add it to the instances\n        const newWeatherComponent = /*#__PURE__*/_jsxDEV(WeatherComponent, {\n          city: data.name,\n          temperature: Math.round(data.main.temp),\n          conditions: data.weather[0].main,\n          onDelete: () => handleDelete(componentInstances.length)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this);\n        setComponentInstances([...componentInstances, newWeatherComponent]);\n      });\n    }\n  };\n  const handleDelete = index => {\n    const updatedInstances = [...componentInstances];\n    updatedInstances.splice(index, 1);\n    setComponentInstances(updatedInstances);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Enter Location\",\n        onChange: e => setCity(e.target.value),\n        value: city,\n        onKeyDown: getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), typeof weatherData.main === 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to WeatherApp. Enter a city to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), componentInstances.map((component, index) => ( /*#__PURE__*/React.cloneElement(component, {\n        onDelete: () => handleDelete(index)\n      })))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"B646rzbDJu/Ci2ErxgfGXTAYPqE=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","WeatherComponent","jsxDEV","_jsxDEV","Weather","_s","api","key","base","weatherData","setWeatherData","city","setCity","componentInstances","setComponentInstances","getWeather","event","fetch","then","response","json","data","newWeatherComponent","name","temperature","Math","round","main","temp","conditions","weather","onDelete","handleDelete","length","fileName","_jsxFileName","lineNumber","columnNumber","index","updatedInstances","splice","className","children","placeholder","onChange","e","target","value","onKeyDown","map","component","cloneElement","_c","$RefreshReg$"],"sources":["/Users/mitchrobards/React Project/weather-app/src/weather.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nimport WeatherComponent from './weathercomponent';\nimport './App.css';\n\nfunction Weather() {\n  const api = {\n    key: 'fca1d839270b44785afc07f9cb794775',\n    base: 'https://api.openweathermap.org/data/2.5',\n  };\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"\");\n  const [componentInstances, setComponentInstances] = useState([]);\n\n  const getWeather = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api.key}&units=imperial`)\n        .then(response => response.json())\n        .then(data => {\n          setWeatherData(data);\n          setCity(\"\");\n\n          // Create a new Weather component and add it to the instances\n          const newWeatherComponent = (\n            \n              <WeatherComponent\n                city={data.name}\n                temperature={Math.round(data.main.temp)}\n                conditions={data.weather[0].main}\n                onDelete={() => (handleDelete(componentInstances.length))}\n              />\n          \n\n          );\n          setComponentInstances([...componentInstances, newWeatherComponent]);\n        });\n    }\n  };\n\n  const handleDelete = (index) => {\n    const updatedInstances = [...componentInstances];\n    updatedInstances.splice(index, 1);\n    setComponentInstances(updatedInstances);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n      <input\n        className=\"input\"\n        placeholder=\"Enter Location\"\n        onChange={(e) => setCity(e.target.value)}\n        value={city}\n        onKeyDown={getWeather}\n      />\n\n      {typeof weatherData.main === 'undefined' && (\n        <div>\n          <p>Welcome to WeatherApp. Enter a city to get started</p>\n        </div>\n      )}\n\n      {componentInstances.map((component, index) => (\n        React.cloneElement(component, { onDelete: () => handleDelete(index) })\n      ))}\n    </div>\n    </div>\n    \n  );\n}\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAGvC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,GAAG,GAAG;IACVC,GAAG,EAAE,kCAAkC;IACvCC,IAAI,EAAE;EACR,CAAC;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMe,UAAU,GAAIC,KAAK,IAAK;IAC5B,IAAIA,KAAK,CAACT,GAAG,KAAK,OAAO,EAAE;MACzBU,KAAK,CAAE,qDAAoDN,IAAK,UAASL,GAAG,CAACC,GAAI,iBAAgB,CAAC,CAC/FW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZX,cAAc,CAACW,IAAI,CAAC;QACpBT,OAAO,CAAC,EAAE,CAAC;;QAEX;QACA,MAAMU,mBAAmB,gBAErBnB,OAAA,CAACF,gBAAgB;UACfU,IAAI,EAAEU,IAAI,CAACE,IAAK;UAChBC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACL,IAAI,CAACM,IAAI,CAACC,IAAI,CAAE;UACxCC,UAAU,EAAER,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACH,IAAK;UACjCI,QAAQ,EAAEA,CAAA,KAAOC,YAAY,CAACnB,kBAAkB,CAACoB,MAAM;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAGJ;QACDvB,qBAAqB,CAAC,CAAC,GAAGD,kBAAkB,EAAES,mBAAmB,CAAC,CAAC;MACrE,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMU,YAAY,GAAIM,KAAK,IAAK;IAC9B,MAAMC,gBAAgB,GAAG,CAAC,GAAG1B,kBAAkB,CAAC;IAChD0B,gBAAgB,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACjCxB,qBAAqB,CAACyB,gBAAgB,CAAC;EACzC,CAAC;EAED,oBACEpC,OAAA;IAAKsC,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBvC,OAAA;MAAKsC,SAAS,EAAC,KAAK;MAAAC,QAAA,gBACpBvC,OAAA;QACEsC,SAAS,EAAC,OAAO;QACjBE,WAAW,EAAC,gBAAgB;QAC5BC,QAAQ,EAAGC,CAAC,IAAKjC,OAAO,CAACiC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACzCA,KAAK,EAAEpC,IAAK;QACZqC,SAAS,EAAEjC;MAAW;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EAED,OAAO5B,WAAW,CAACkB,IAAI,KAAK,WAAW,iBACtCxB,OAAA;QAAAuC,QAAA,eACEvC,OAAA;UAAAuC,QAAA,EAAG;QAAkD;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CACN,EAEAxB,kBAAkB,CAACoC,GAAG,CAAC,CAACC,SAAS,EAAEZ,KAAK,oBACvCvC,KAAK,CAACoD,YAAY,CAACD,SAAS,EAAE;QAAEnB,QAAQ,EAAEA,CAAA,KAAMC,YAAY,CAACM,KAAK;MAAE,CAAC,CAAC,CACvE,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGV;AAAChC,EAAA,CAhEQD,OAAO;AAAAgD,EAAA,GAAPhD,OAAO;AAkEhB,eAAeA,OAAO;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}