{"ast":null,"code":"var _jsxFileName = \"/Users/mitchrobards/React Project/weather-app/src/weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport H from '@here/maps-api-for-javascript';\nimport WeatherComponent from './weathercomponent';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const api = {\n    key: 'fca1d839270b44785afc07f9cb794775',\n    base: 'https://api.openweathermap.org/data/2.5'\n  };\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"\");\n  const [forecastData, setForecastData] = useState({});\n  const [componentInstances, setComponentInstances] = useState([]);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n  const getWeather = event => {\n    if (event.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api.key}&units=imperial`).then(response => response.json()).then(data => {\n        setWeatherData(data);\n        setCity(\"\");\n        fetch(`api.openweathermap.org/data/2.5/forecast?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api.key}`).then(response = response.json()).then(forecast => {\n          setForecastData(forecast);\n        });\n\n        // Create a new Weather component and add it to the instances\n        const newWeatherComponent = /*#__PURE__*/_jsxDEV(WeatherComponent, {\n          city: data.name,\n          temperature: Math.round(data.main.temp),\n          conditions: data.weather[0].description,\n          weathericon: data.weather[0].icon,\n          onDelete: () => handleDelete(componentInstances.length),\n          lon: data.coord.lon,\n          lat: data.coord.lat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n        setComponentInstances([...componentInstances, newWeatherComponent]);\n      });\n    }\n  };\n  const handleDelete = index => {\n    const updatedInstances = [...componentInstances];\n    updatedInstances.splice(index, 1);\n    setComponentInstances(updatedInstances);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Enter Location\",\n        onChange: e => setCity(e.target.value),\n        value: city,\n        onKeyDown: getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), typeof weatherData.main === 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to WeatherApp. Enter a city to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), componentInstances.map((component, index) => ( /*#__PURE__*/React.cloneElement(component, {\n        onDelete: () => handleDelete(index)\n      })))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"rpRzGMEIu4msN5HhB9LsGzyjL8I=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","useRef","H","WeatherComponent","jsxDEV","_jsxDEV","Weather","_s","api","key","base","weatherData","setWeatherData","city","setCity","forecastData","setForecastData","componentInstances","setComponentInstances","weatherIcon","setWeatherIcon","getWeather","event","fetch","then","response","json","data","coord","lat","lon","forecast","newWeatherComponent","name","temperature","Math","round","main","temp","conditions","weather","description","weathericon","icon","onDelete","handleDelete","length","fileName","_jsxFileName","lineNumber","columnNumber","index","updatedInstances","splice","className","children","placeholder","onChange","e","target","value","onKeyDown","map","component","cloneElement","_c","$RefreshReg$"],"sources":["/Users/mitchrobards/React Project/weather-app/src/weather.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport H from '@here/maps-api-for-javascript';\n\nimport WeatherComponent from './weathercomponent';\nimport './App.css';\n\nfunction Weather() {\n  const api = {\n    key: 'fca1d839270b44785afc07f9cb794775',\n    base: 'https://api.openweathermap.org/data/2.5',\n  };\n\n\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"\");\n  const [forecastData, setForecastData] = useState({});\n  const [componentInstances, setComponentInstances] = useState([]);\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\n\n  \n  \n\n  const getWeather = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api.key}&units=imperial`)\n        .then(response => response.json())\n        .then(data => {\n          setWeatherData(data);\n          setCity(\"\");\n      fetch(`api.openweathermap.org/data/2.5/forecast?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api.key}`)\n          .then(response = response.json())\n          .then(forecast => {\n            setForecastData(forecast);\n          })\n\n          \n\n          // Create a new Weather component and add it to the instances\n          const newWeatherComponent = (\n\n            <WeatherComponent\n              city={data.name}\n              temperature={Math.round(data.main.temp)}\n              conditions={data.weather[0].description}\n              weathericon={data.weather[0].icon}\n              onDelete={() => (handleDelete(componentInstances.length))}\n              lon={data.coord.lon}\n              lat={data.coord.lat}\n            />\n\n\n          );\n          setComponentInstances([...componentInstances, newWeatherComponent]);\n        });\n    }\n  };\n\n  const handleDelete = (index) => {\n    const updatedInstances = [...componentInstances];\n    updatedInstances.splice(index, 1);\n    setComponentInstances(updatedInstances);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <input\n          className=\"input\"\n          placeholder=\"Enter Location\"\n          onChange={(e) => setCity(e.target.value)}\n          value={city}\n          onKeyDown={getWeather}\n        />\n\n        {typeof weatherData.main === 'undefined' && (\n          <div>\n            <p>Welcome to WeatherApp. Enter a city to get started</p>\n          </div>\n        )}\n\n        {componentInstances.map((component, index) => (\n          React.cloneElement(component, { onDelete: () => handleDelete(index) })\n        ))}\n      </div>\n    </div>\n\n  );\n}\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}